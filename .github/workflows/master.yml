name: money_move CI/CD

on:
  push:
    branches: 
      - master
    paths-ignore:
      - '**/README.md'

jobs:
  build_and_push_to_dockerhub:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx 
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/money_move_backend:latest

      - name: Push gateway to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/money_move_nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_dockerhub
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Copy docker-compose to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }} 
          source: "docker-compose.yml"
          target: "money_move"

      - name: Prepare .env and run compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cat > money_move/.env << 'EOF'
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            DB_HOST=db
            DB_PORT=5432

            SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
            DEBUG=False
            ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
            CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }}
            EOF

            cd money_move
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d

            sudo docker compose exec backend python manage.py migrate
            sudo docker compose exec backend \
              python manage.py load_default_directory
            sudo docker compose exec backend \
              python manage.py collectstatic --noinput

            sudo docker image prune -af
